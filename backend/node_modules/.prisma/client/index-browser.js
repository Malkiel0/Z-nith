
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  message: 'message',
  type: 'type',
  targetId: 'targetId',
  read: 'read',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone: 'phone',
  avatar: 'avatar',
  role: 'role',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  image_url: 'image_url',
  price: 'price',
  discount_price: 'discount_price',
  type: 'type',
  stock_quantity: 'stock_quantity',
  sku: 'sku',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  name: 'name',
  price: 'price',
  stock_quantity: 'stock_quantity',
  sku: 'sku'
};

exports.Prisma.ProductAttributeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ProductAttributeValueScalarFieldEnum = {
  id: 'id',
  attribute_id: 'attribute_id',
  value: 'value'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  session_id: 'session_id'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cart_id: 'cart_id',
  product_id: 'product_id',
  variant_id: 'variant_id',
  quantity: 'quantity',
  unit_price: 'unit_price'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  status: 'status',
  total_amount: 'total_amount',
  commission_amount: 'commission_amount',
  payment_method: 'payment_method',
  payment_status: 'payment_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  variant_id: 'variant_id',
  quantity: 'quantity',
  unit_price: 'unit_price',
  subtotal: 'subtotal'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  amount: 'amount',
  method: 'method',
  status: 'status',
  transaction_id: 'transaction_id',
  paid_at: 'paid_at'
};

exports.Prisma.CommissionScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  amount: 'amount',
  collected: 'collected'
};

exports.Prisma.ShippingAddressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  full_name: 'full_name',
  phone: 'phone',
  address: 'address',
  city: 'city',
  country: 'country',
  postal_code: 'postal_code'
};

exports.Prisma.ShippingMethodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price'
};

exports.Prisma.OrderShipmentScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  shipping_method_id: 'shipping_method_id',
  tracking_number: 'tracking_number',
  status: 'status',
  shipped_at: 'shipped_at',
  delivered_at: 'delivered_at'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  code: 'code',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  max_usage: 'max_usage',
  used_count: 'used_count',
  expires_at: 'expires_at',
  is_active: 'is_active'
};

exports.Prisma.OrderCouponScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  coupon_id: 'coupon_id',
  discount_applied: 'discount_applied'
};

exports.Prisma.ReturnScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  user_id: 'user_id',
  reason: 'reason',
  status: 'status',
  refund_amount: 'refund_amount'
};

exports.Prisma.FinancialTransactionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  order_id: 'order_id',
  type: 'type',
  amount: 'amount',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.SettingScalarFieldEnum = {
  id: 'id',
  shopName: 'shopName',
  email: 'email',
  currency: 'currency',
  theme: 'theme',
  maintenance: 'maintenance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Notification: 'Notification',
  User: 'User',
  Product: 'Product',
  ProductVariant: 'ProductVariant',
  ProductAttribute: 'ProductAttribute',
  ProductAttributeValue: 'ProductAttributeValue',
  Cart: 'Cart',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Payment: 'Payment',
  Commission: 'Commission',
  ShippingAddress: 'ShippingAddress',
  ShippingMethod: 'ShippingMethod',
  OrderShipment: 'OrderShipment',
  Coupon: 'Coupon',
  OrderCoupon: 'OrderCoupon',
  Return: 'Return',
  FinancialTransaction: 'FinancialTransaction',
  Setting: 'Setting'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
